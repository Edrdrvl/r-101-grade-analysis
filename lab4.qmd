---
title: "Grade_analysislab"
format: html
echo: false
editor: visual
---

```{r}
#| message: false
here::i_am("r-101-grade-analysis.Rproj")
library(here)
library(vroom) # or readr
library(dplyr)
library(tidyr)
library(ggplot2)
library(stringr)
```

## Exercise 1

### Question 1

```{r}
#| message: false
grades <- vroom(here("/Users/edoardoruvolo/Desktop/Data Management/r-101-grade-analysis/grades.csv"))
```

### Question 2

Compute the minimum, maximum, median and mean grade at the Exam and include the results as a table in the rendered document (using, e.g. knitr::kable).

```{r}
MMMG <- grades %>%
  summarise('Min'=min(Exam, na.rm=TRUE), 
            'Max'=max(Exam, na.rm=TRUE), 
            'Mean'=mean(Exam, na.rm=TRUE), 
            'Median'=median(Exam, na.rm=TRUE))%>%
  knitr::kable()
MMMG
```

### Question 3

Counts the number of students who did not take the final exam (i.e. for whom Exam is NA) and include the results in a sentence in your rendered document.

```{r}
nnex <- sum(is.na(grades$Exam))
```

On the day of the exam, `r nnex` people did not partecipate to the exam

### Question 4

Represent graphically in an adapted way the distribution of grades at the Exam. Make sure to adapt the code to avoid any error or warning from ggplot2.

```{r}
nograde <-grades %>% 
   filter(is.na(Exam)) %>%
   summarise(N=n())
```

```{r}
nograde <- grades %>% 
  drop_na(Exam)
  
ggplot(nograde, aes(x = Exam))+ 
  geom_bar() +
  xlab("Distribution of the exam grade")+
  ylab("Count")+
  ggtitle("Distribution of grades")
```

### Question 5

Compute the number of students in each Group and include the results in your document as a table.

```{r}
bygroup <- grades %>%
  group_by(Group) %>%
  summarise(N=n())%>%
  arrange(desc(N)) 
bygroup %>%
  knitr::kable()
```

### Question 6

Represent the same information as in the previous question in a graphical way.

```{r}
ggplot(bygroup, aes(x = Group, y = N))+ 
  geom_col() +
  xlab("Group Name")+
  ylab("Count")+
  ggtitle("Number of student per group")
```

### Question 7

Represent graphically the distribution of the grades at the Exam conditioned by the group. Test at least two different representations.

```{r}
gradesbygroup <- grades %>%
  filter(!is.na(Exam))
ggplot(gradesbygroup, aes(x = Exam, fill=Group)) + geom_bar(position="fill") +
  ylab("Number of students in percentage")+
  xlab("Exam Score")+
 ggtitle("Distribution of Exam Scores by Group")
```
### Question 7.1 
```{r}
ggplot(gradesbygroup, aes(x = Exam)) +
  geom_bar() +
  facet_wrap(~Group) +
  ylab("count")+
  xlab("Exam grade")
```

### Question 8 
Compute the number of students who missed the Exam in each Group (i.e. students whose Exam is NA).
```{r}
# da aggiustare
nograde2 <- grades %>%
group_by(Group) %>%
summarise(not_attending = sum(is.na(Exam)))
table_NAS <- knitr::kable(nograde2, caption = "# of students not attending the exam")
table_NAS
```
### Question 9
Graphical representation of question 8
```{r}
ggplot(nograde2, aes(x = Group, y = not_attending)) +
  geom_col(fill = "green") +
  xlab("Grups")+
  ylab("# of absent students")+
 ggtitle("Number of Absent Students by Group")

```
### Question 10
Create a new data frame built from the grades data set reshaped to a long format. The new data frame should keep the Id and the Group as the original variables. The first lines of the data frame should have the following form (the actual values may be different)
```{r}
GL <- grades %>%
  select(starts_with("MCQ"), starts_with("Online"), Exam, Id, Group) %>%
  pivot_longer(cols = starts_with("MCQ") | starts_with("Online") | Exam, names_to = "Examination", values_to = "Grade")
```

### Question 11
Using the long format, compute the number of missing grades in total for each student.
```{r}
MGS <- GL %>%
  group_by(Id) %>%
  summarise(Missing_Grades = sum(is.na(Grade)))
table_MGS <- knitr::kable(MGS, caption = "# missing grade per student")
table_MGS
```
### Question 12
Represent graphically the distribution of the number of missing grades per student.

```{r}
ggplot(MGS, aes(x = Missing_Grades)) +
  ylab("# of students") +
  xlab("# of missing grades") +
  ggtitle("Distribution of missing grades per student")+
  geom_histogram(color = "red", fill = "darkred", bins = 30)
```
### Question 13

Using the long format, compute the same information as in question 8.
```{r, Missing Grade per Group}
NES3 <- GL %>%
  group_by(Id) %>%
  summarise(Absent = sum(is.na(Grade)))
table_NAS3 <- knitr::kable(NES3, caption = "# of student")
table_NAS
```

### Question 14

Using the long format, compute the number of missing grades for the online tests for each student.
```{r}
MGO <- GL %>%
  filter(str_starts(Examination, "Online_MCQ")) %>%
  group_by(Id) %>%
  summarise(Missing_grade_online = sum(is.na(Grade)))
MGO
```

### Question 15

Represent graphically the distribution of the grades at the Exam conditioned by the number of missing grades for the online tests.

```{r}
Merged_df1 <- grades %>%
   left_join(MGO, by = "Id")

data1 = filter(Merged_df1, !is.na(Exam))

ggplot(data1, aes(x = as.factor(Missing_grade_online), y = Exam)) +
  geom_boxplot() +
  xlab("Total of missing grades for the online tests") +
  ylab("Grade at the exam") +
  ggtitle("Distribution of the grades at the exam, conditioned on the number of missing grades for the online tests")
```

### Question 16
Create a table with two columns: Id to identify students and Missed with value TRUE when the student miss at least one MCQ_xx grade and FALSE when they miss no grade.

```{r}
MMCQ <- grades %>%
  rowwise() %>%
  mutate(Missed = any(is.na(c_across(starts_with("MCQ"))))) %>%
  select(Id, Missed)
MMCQ <- MMCQ[order(MMCQ$Id, decreasing = FALSE),]
table4 <- knitr::kable(MMCQ, caption = "At least one MCQ missed, per student")
table4
```

### Question 17
Create a table with two columns: Group to identify groups and P_missed with the percentage of students in each group who missed at least one MCQ_xx grade.

```{r}
PMMCQ <- grades %>%
  rowwise() %>%
  mutate(Missed = any(is.na(c_across(starts_with("MCQ"))))) %>%
  ungroup() %>%
  group_by(Group) %>%
  summarise(
    Total_student_per_group = n(),
    Students_missing_one = sum(Missed, na.rm = TRUE),
    P_missed = (Students_missing_one / Total_student_per_group ) * 100
  ) %>%
   mutate(P_missed = scales::percent(P_missed, scale = 1)) %>%
  select(Group, P_missed)
table5 <- knitr::kable(PMMCQ, caption = "Percentage of students in each group who missed at least one MCQ")
table5
```

### Question 18





